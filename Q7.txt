;gnu clisp  2.49.60

(defun is-tree(tree)
    (cond 
         ((null tree) NIL)
         ((< (list-length tree) 3) NIL)
         (t)
    )
)

;return left subtree of a binary tree
(defun left-subtree(tree)
    (cond 
         ((null tree) NIL)
         ((not (listp tree)) NIL)
         (t (car (cdr tree)))
    )
)

(defun right-subtree(tree)
    (cond 
         ((null tree) NIL)
         ((not (listp tree)) NIL)
         (t (car (cdr (cdr tree))))
    )
)

(defun inorder(tree)
    (if 
        (not (is-tree tree)) NIL
            (append 
                 (inorder (left-subtree tree))
                 (list (car tree))
                 (inorder (right-subtree tree))
            ) 
    )
)

(print (inorder '(8 (3 (1 () ()) (6 (4 () ())(7 () ()))) (10 () (14 (13 () ()) ())))))
